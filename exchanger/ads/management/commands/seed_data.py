from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from ads.models import Ad


class Command(BaseCommand):
    help = "–û—á–∏—â–∞–µ—Ç –ë–î –∏ —Å–æ–∑–¥–∞—ë—Ç 3 —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è + 10 —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π"

    def handle(self, *args, **kwargs):
        Ad.objects.all().delete()
        self.stdout.write("üóëÔ∏è –í—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã.")

        User.objects.filter(is_superuser=False).delete()
        self.stdout.write("üóëÔ∏è –í—Å–µ –æ–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–¥–∞–ª–µ–Ω—ã.")

        users_data = [
            {"username": "alice", "email": "alice@example.com"},
            {"username": "bob", "email": "bob@example.com"},
            {"username": "carol", "email": "carol@example.com"},
        ]

        users = []
        for user_data in users_data:
            user = User.objects.create_user(
                username=user_data["username"],
                email=user_data["email"],
                password="testpass123"
            )
            users.append(user)
            self.stdout.write(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} —Å–æ–∑–¥–∞–Ω.")

        ads_data = [
            {"title": "–°–º–∞—Ä—Ç—Ñ–æ–Ω Samsung", "description": "–†–∞–±–æ—á–∏–π, –µ—Å—Ç—å —Ç—Ä–µ—â–∏–Ω–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ.", "category": "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", "condition": "new"},
            {"title": "–ö—É—Ä—Ç–∫–∞ –∑–∏–º–Ω—è—è", "description": "–¢—ë–ø–ª–∞—è, —Ä–∞–∑–º–µ—Ä M.", "category": "–û–¥–µ–∂–¥–∞", "condition": "used"},
            {"title": "–†—é–∫–∑–∞–∫ –≥–æ—Ä–æ–¥—Å–∫–æ–π", "description": "–ü–æ—á—Ç–∏ –Ω–æ–≤—ã–π, –≤–º–µ—Å—Ç–∏—Ç–µ–ª—å–Ω—ã–π.", "category": "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã", "condition": "new"},
            {"title": "–ù–æ—É—Ç–±—É–∫ Lenovo", "description": "–î–ª—è —Ä–∞–±–æ—Ç—ã –∏ —É—á—ë–±—ã. SSD 256 –ì–ë.", "category": "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", "condition": "used"},
            {"title": "–î–µ—Ç—Å–∫–∞—è –∫–æ–ª—è—Å–∫–∞", "description": "–£–¥–æ–±–Ω–∞—è –∏ –ª—ë–≥–∫–∞—è.", "category": "–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–µ—Ç–µ–π", "condition": "used"},
            {"title": "–ò–≥—Ä–æ–≤–∞—è –ø—Ä–∏—Å—Ç–∞–≤–∫–∞", "description": "PlayStation 4, 2 –≥–µ–π–º–ø–∞–¥–∞.", "category": "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞", "condition": "used"},
            {"title": "–°–Ω–æ—É–±–æ—Ä–¥", "description": "–ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö.", "category": "–°–ø–æ—Ä—Ç", "condition": "new"},
            {"title": "–£—á–µ–±–Ω–∏–∫–∏ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ", "description": "–ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Ç –∑–∞ 10 –∫–ª–∞—Å—Å.", "category": "–ö–Ω–∏–≥–∏", "condition": "used"},
            {"title": "–°—Ç—É–ª –æ—Ñ–∏—Å–Ω—ã–π", "description": "–≠—Ä–≥–æ–Ω–æ–º–∏—á–Ω—ã–π, —Å–µ—Ä—ã–π —Ü–≤–µ—Ç.", "category": "–ú–µ–±–µ–ª—å", "condition": "new"},
            {"title": "–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞", "description": "–†–∞–±–æ—á–∞—è, 700 –í—Ç.", "category": "–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", "condition": "used"},
        ]

        for i, ad_data in enumerate(ads_data):
            ad = Ad.objects.create(
                user=users[i % len(users)],
                title=ad_data["title"],
                description=ad_data["description"],
                category=ad_data["category"],
                condition=ad_data["condition"],
                image_url="https://www.svgrepo.com/show/508699/landscape-placeholder.svg"
            )
            self.stdout.write(f"üì¶ –û–±—ä—è–≤–ª–µ–Ω–∏–µ \"{ad.title}\" —Å–æ–∑–¥–∞–Ω–æ.")

        self.stdout.write(self.style.SUCCESS("‚úÖ –ì–æ—Ç–æ–≤–æ: –±–∞–∑–∞ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏."))
